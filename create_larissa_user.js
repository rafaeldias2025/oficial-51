import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const supabaseUrl = 'http://127.0.0.1:54321';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU';

const supabase = createClient(supabaseUrl, supabaseKey);

async function createLarissaUser() {
  try {
    console.log('üë§ Criando usu√°rio Larissa Barbosa...');
    
    // 1. Criar usu√°rio no auth.users
    console.log('\nüîê Criando usu√°rio no sistema de autentica√ß√£o...');
    
    const userId = '00000000-0000-0000-0000-000000000007'; // ID √∫nico para Larissa
    
    const { data: authUser, error: authError } = await supabase
      .from('auth.users')
      .insert({
        id: userId,
        email: 'larissabarbosa@gmail.com',
        encrypted_password: '$2a$10$example.hash.for.password.10203040',
        email_confirmed_at: new Date().toISOString(),
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      })
      .select()
      .single();
      
    if (authError) {
      console.log('‚ö†Ô∏è Usu√°rio j√° pode existir no auth, continuando...');
    } else {
      console.log('‚úÖ Usu√°rio criado no sistema de autentica√ß√£o');
    }
    
    // 2. Criar perfil do usu√°rio
    console.log('\nüë§ Criando perfil do usu√°rio...');
    
    const { data: profile, error: profileError } = await supabase
      .from('profiles')
      .insert({
        id: userId,
        email: 'larissabarbosa@gmail.com',
        full_name: 'Larissa Barbosa',
        avatar_url: null,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      })
      .select()
      .single();
      
    if (profileError) {
      console.error('‚ùå Erro ao criar perfil:', profileError);
      return;
    }
    
    console.log('‚úÖ Perfil criado com sucesso');
    
    // 3. Verificar se o usu√°rio foi criado
    console.log('\nüîç Verificando usu√°rio criado...');
    const { data: checkUser, error: checkError } = await supabase
      .from('profiles')
      .select('*')
      .eq('email', 'larissabarbosa@gmail.com')
      .single();
      
    if (checkError) {
      console.error('‚ùå Erro ao verificar usu√°rio:', checkError);
      return;
    }
    
    console.log('‚úÖ Usu√°rio verificado:');
    console.log(`   - ID: ${checkUser.id}`);
    console.log(`   - Nome: ${checkUser.full_name}`);
    console.log(`   - Email: ${checkUser.email}`);
    console.log(`   - Criado em: ${checkUser.created_at}`);
    
    console.log('\nüéâ Usu√°rio Larissa Barbosa criado com sucesso!');
    console.log('üîë Credenciais de login:');
    console.log('   - Email: larissabarbosa@gmail.com');
    console.log('   - Senha: 10203040');
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error);
  }
}

// Executar a cria√ß√£o do usu√°rio
createLarissaUser(); 