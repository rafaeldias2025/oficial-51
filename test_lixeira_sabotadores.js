import { chromium } from 'playwright';

async function testLixeiraSabotadores() {
  const browser = await chromium.launch({ headless: false, slowMo: 1000 });
  const page = await browser.newPage();
  
  try {
    console.log('üß™ Testando sistema de lixeira de seguran√ßa...');
    
    // Navegar para a p√°gina dos sabotadores
    await page.goto('http://localhost:8083/sabotadores-demo');
    await page.waitForTimeout(2000);
    
    // Verificar se o bot√£o da lixeira est√° vis√≠vel
    const lixeiraButton = await page.locator('button:has-text("Lixeira")');
    const lixeiraVisible = await lixeiraButton.isVisible();
    console.log(`${lixeiraVisible ? '‚úÖ' : '‚ùå'} Bot√£o da lixeira vis√≠vel`);
    
    // Clicar no bot√£o da lixeira
    await lixeiraButton.click();
    await page.waitForTimeout(1000);
    
    // Verificar se a interface da lixeira aparece
    const lixeiraInterface = await page.locator('text="Lixeira de Seguran√ßa"');
    const interfaceVisible = await lixeiraInterface.isVisible();
    console.log(`${interfaceVisible ? '‚úÖ' : '‚ùå'} Interface da lixeira vis√≠vel`);
    
    // Verificar se mostra "Lixeira vazia"
    const lixeiraVazia = await page.locator('text="Lixeira vazia"');
    const vaziaVisible = await lixeiraVazia.isVisible();
    console.log(`${vaziaVisible ? '‚úÖ' : '‚ùå'} Lixeira vazia inicialmente`);
    
    // Fechar a lixeira
    const fecharButton = await page.locator('button:has-text("Fechar")');
    await fecharButton.click();
    await page.waitForTimeout(1000);
    
    // Verificar se h√° bot√£o de lixeira pequeno ao lado da pergunta
    const lixeiraPequena = await page.locator('button[title="Mover para lixeira de seguran√ßa"]');
    const pequenaVisible = await lixeiraPequena.isVisible();
    console.log(`${pequenaVisible ? '‚úÖ' : '‚ùå'} Bot√£o de lixeira pequeno vis√≠vel`);
    
    // Clicar no bot√£o de lixeira pequeno para mover uma pergunta
    await lixeiraPequena.first().click();
    await page.waitForTimeout(1000);
    
    // Verificar se apareceu toast de sucesso
    const toast = await page.locator('text="Pergunta movida para a lixeira de seguran√ßa"');
    const toastVisible = await toast.isVisible();
    console.log(`${toastVisible ? '‚úÖ' : '‚ùå'} Toast de confirma√ß√£o apareceu`);
    
    // Abrir lixeira novamente para verificar se a pergunta foi movida
    await lixeiraButton.click();
    await page.waitForTimeout(1000);
    
    // Verificar se h√° perguntas na lixeira
    const perguntaNaLixeira = await page.locator('text="Eu sempre escolho roupas que mais disfar√ßam meu excesso de peso."');
    const perguntaVisible = await perguntaNaLixeira.isVisible();
    console.log(`${perguntaVisible ? '‚úÖ' : '‚ùå'} Pergunta movida para lixeira`);
    
    // Testar bot√£o restaurar
    const restaurarButton = await page.locator('button:has-text("Restaurar")');
    await restaurarButton.first().click();
    await page.waitForTimeout(1000);
    
    // Verificar toast de restaura√ß√£o
    const toastRestauracao = await page.locator('text="Pergunta restaurada com sucesso"');
    const restauracaoVisible = await toastRestauracao.isVisible();
    console.log(`${restauracaoVisible ? '‚úÖ' : '‚ùå'} Pergunta restaurada com sucesso`);
    
    // Verificar se a lixeira voltou a estar vazia
    const lixeiraVaziaNovamente = await page.locator('text="Lixeira vazia"');
    const vaziaNovamente = await lixeiraVaziaNovamente.isVisible();
    console.log(`${vaziaNovamente ? '‚úÖ' : '‚ùå'} Lixeira vazia ap√≥s restaura√ß√£o`);
    
    console.log('üéâ Teste da lixeira de seguran√ßa conclu√≠do!');
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
  } finally {
    await browser.close();
  }
}

testLixeiraSabotadores(); 